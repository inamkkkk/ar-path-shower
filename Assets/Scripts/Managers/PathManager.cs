using UnityEngine;\nusing System.Collections.Generic;\nusing System;\n\nnamespace Scripts.Managers\n{\n    public class PathManager : MonoBehaviour\n    {\n        public static PathManager Instance { get; private set; }\n\n        private List<Vector3> currentPathPoints = new List<Vector3>();\n        private bool isRecording = false;\n\n        public event Action OnPathSaved;\n\n        private void Awake()\n        {\n            if (Instance == null)\n            {\n                Instance = this;\n                DontDestroyOnLoad(gameObject);\n            }\n            else\n            {\n                Destroy(gameObject);\n            }\n        }\n\n        public void StartPathRecording()\n        {\n            if (!isRecording)\n            {\n                currentPathPoints.Clear();\n                isRecording = true;\n                Debug.Log("Path recording started.");\n            }\n        }\n\n        public void AddPathPoint(Vector3 position)\n        {\n            if (isRecording)\n            {\n                currentPathPoints.Add(position);\n                // Optionally visualize the point or the path segment as it's being recorded\n            }\n        }\n\n        public void EndPathRecording()\n        {\n            if (isRecording)\n            {\n                isRecording = false;\n                Debug.Log("Path recording ended. Points: " + currentPathPoints.Count);\n                \n                // Simulate saving the path\n                if (currentPathPoints.Count > 0)\n                {\n                    SavePath();\n                }\n            }\n        }\n\n        private void SavePath()\n        {\n            // In a real game, this would save to local storage or cloud.\n            // For this spec, we'll just trigger an event.\n            Debug.Log("Path saved.");\n            OnPathSaved?.Invoke();\n        }\n\n        public List<Vector3> GetCurrentPathPoints()\n        {\n            return new List<Vector3>(currentPathPoints);\n        }\n\n        public void ClearCurrentPath()\n        {\n            currentPathPoints.Clear();\n            isRecording = false;\n        }\n    }\n}\n