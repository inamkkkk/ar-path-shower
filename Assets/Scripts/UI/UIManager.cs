using UnityEngine;\nusing UnityEngine.UI;\nusing UnityEngine.SceneManagement;\n\npublic class UIManager : MonoBehaviour\n{\n    // --- Events ---\n    public delegate void QRCodeGeneratedHandler(string qrData);\n    public static event QRCodeGeneratedHandler OnQRCodeGenerated;\n\n    // --- Public Methods ---\n    public void ShowMainMenu()\n    {\n        SceneManager.LoadScene("MainMenu.unity");\n    }\n\n    public void ShowPathOptions()\n    {\n        // Logic to show path options UI (e.g., start recording, load path)\n        Debug.Log("Showing path options...");\n    }\n\n    public void ShowQRCode(string qrData)\n    {\n        // This would typically involve displaying a UI element (e.g., an Image) with the QR code texture.\n        // For this example, we'll just log it and trigger the event.\n        Debug.Log("QR Code Data: " + qrData);\n        OnQRCodeGenerated?.Invoke(qrData);\n    }\n\n    // --- Unity Lifecycle Methods ---\n    void Start()\n    {\n        // Initial UI setup based on the current scene.\n        if (SceneManager.GetActiveScene().name == "MainMenu.unity")\n        {\n            ShowMainMenu();\n        }\n        else if (SceneManager.GetActiveScene().name == "ARScene.unity")\n        {\n            ShowPathOptions();\n        }\n    }\n}\n