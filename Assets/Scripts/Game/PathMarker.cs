using UnityEngine;\nusing UnityEngine.InputSystem;\nusing UnityEngine.Events;\nusing System;\n\nnamespace Game\n{\n    public class PathMarker : MonoBehaviour\n    {\n        [SerializeField] private float maxDistance = 100f;\n        [SerializeField] private LayerMask hittableLayers;\n\n        public static event Action OnTouchTap;\n\n        private bool isRecording = false;\n        private PathManager pathManager;\n\n        private void Awake()\n        {\n            pathManager = FindObjectOfType<PathManager>();\n            if (pathManager == null)\n            {\n                Debug.LogError("PathManager not found in scene.");\n            }\n        }\n\n        private void Update()\n        {\n            if (isRecording && (Touchscreen.current != null && Touchscreen.current.primaryTouch.press.wasPerformedThisFrame))\n            {\n                HandleTap();\n            }\n        }\n\n        public void StartRecording()\n        {\n            isRecording = true;\n            pathManager.ClearCurrentPath();\n            Debug.Log("Path recording started.");\n        }\n\n        public void StopRecording()\n        {\n            isRecording = false;\n            pathManager.EndPathRecording();\n            Debug.Log("Path recording stopped.");\n        }\n\n        private void HandleTap()\n        {\n            if (Camera.main == null)\n            {\n                Debug.LogError("Main Camera is not tagged or not found.");\n                return;\n            }\n\n            Ray ray = Camera.main.ScreenPointToRay(Touchscreen.current.primaryTouch.position.ReadValue());\n            RaycastHit hit;\n\n            if (Physics.Raycast(ray, out hit, maxDistance, hittableLayers))\n            {\n                AddPoint(hit.point);\n                OnTouchTap?.Invoke();\n            }\n        }\n\n        public void AddPoint(Vector3 position)\n        {\n            if (isRecording && pathManager != null)\n            {\n                pathManager.AddPathPoint(position);\n            }\n        }\n    }\n}